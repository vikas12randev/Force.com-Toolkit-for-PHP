//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Myphones.Authentication
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://myphones.com/webservices/", ConfigurationName="Myphones.Authentication.MyPhonesAuthenticationSoap")]
    public interface MyPhonesAuthenticationSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://myphones.com/webservices/GetIfUsageStats", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string[]> GetIfUsageStatsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://myphones.com/webservices/Authenticate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Myphones.Authentication.AuthenticateResponse> AuthenticateAsync(Myphones.Authentication.AuthenticateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://myphones.com/webservices/ReAuthenticate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Myphones.Authentication.ReAuthenticateResponse> ReAuthenticateAsync(Myphones.Authentication.ReAuthenticateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://myphones.com/webservices/Logoff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Myphones.Authentication.LogoffResponse> LogoffAsync(Myphones.Authentication.LogoffRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://myphones.com/webservices/LogoffBySeqNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Myphones.Authentication.LogoffBySeqNumResponse> LogoffBySeqNumAsync(Myphones.Authentication.LogoffBySeqNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://myphones.com/webservices/CleanupExpiredTokens", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Myphones.Authentication.CleanupExpiredTokensResponse> CleanupExpiredTokensAsync(Myphones.Authentication.CleanupExpiredTokensRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://myphones.com/webservices/")]
    public partial class RemoteClientInfoHeader
    {
        
        private string ipAddressField;
        
        private string userAgentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ipAddress
        {
            get
            {
                return this.ipAddressField;
            }
            set
            {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string userAgent
        {
            get
            {
                return this.userAgentField;
            }
            set
            {
                this.userAgentField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Authenticate", WrapperNamespace="http://myphones.com/webservices/", IsWrapped=true)]
    public partial class AuthenticateRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://myphones.com/webservices/")]
        public Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=0)]
        public string[] callersClientContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=1)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=2)]
        public string password;
        
        public AuthenticateRequest()
        {
        }
        
        public AuthenticateRequest(Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader, string[] callersClientContext, string userName, string password)
        {
            this.RemoteClientInfoHeader = RemoteClientInfoHeader;
            this.callersClientContext = callersClientContext;
            this.userName = userName;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateResponse", WrapperNamespace="http://myphones.com/webservices/", IsWrapped=true)]
    public partial class AuthenticateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=0)]
        public string AuthenticateResult;
        
        public AuthenticateResponse()
        {
        }
        
        public AuthenticateResponse(string AuthenticateResult)
        {
            this.AuthenticateResult = AuthenticateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReAuthenticate", WrapperNamespace="http://myphones.com/webservices/", IsWrapped=true)]
    public partial class ReAuthenticateRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://myphones.com/webservices/")]
        public Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=0)]
        public string[] callersClientContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=1)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=2)]
        public string password;
        
        public ReAuthenticateRequest()
        {
        }
        
        public ReAuthenticateRequest(Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader, string[] callersClientContext, string sessionToken, string password)
        {
            this.RemoteClientInfoHeader = RemoteClientInfoHeader;
            this.callersClientContext = callersClientContext;
            this.sessionToken = sessionToken;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReAuthenticateResponse", WrapperNamespace="http://myphones.com/webservices/", IsWrapped=true)]
    public partial class ReAuthenticateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=0)]
        public string ReAuthenticateResult;
        
        public ReAuthenticateResponse()
        {
        }
        
        public ReAuthenticateResponse(string ReAuthenticateResult)
        {
            this.ReAuthenticateResult = ReAuthenticateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Logoff", WrapperNamespace="http://myphones.com/webservices/", IsWrapped=true)]
    public partial class LogoffRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://myphones.com/webservices/")]
        public Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=0)]
        public string[] callersClientContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=1)]
        public string sessionToken;
        
        public LogoffRequest()
        {
        }
        
        public LogoffRequest(Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader, string[] callersClientContext, string sessionToken)
        {
            this.RemoteClientInfoHeader = RemoteClientInfoHeader;
            this.callersClientContext = callersClientContext;
            this.sessionToken = sessionToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogoffResponse", WrapperNamespace="http://myphones.com/webservices/", IsWrapped=true)]
    public partial class LogoffResponse
    {
        
        public LogoffResponse()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogoffBySeqNum", WrapperNamespace="http://myphones.com/webservices/", IsWrapped=true)]
    public partial class LogoffBySeqNumRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://myphones.com/webservices/")]
        public Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=0)]
        public string[] callersClientContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=1)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=2)]
        public string sessionId;
        
        public LogoffBySeqNumRequest()
        {
        }
        
        public LogoffBySeqNumRequest(Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader, string[] callersClientContext, string sessionToken, string sessionId)
        {
            this.RemoteClientInfoHeader = RemoteClientInfoHeader;
            this.callersClientContext = callersClientContext;
            this.sessionToken = sessionToken;
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogoffBySeqNumResponse", WrapperNamespace="http://myphones.com/webservices/", IsWrapped=true)]
    public partial class LogoffBySeqNumResponse
    {
        
        public LogoffBySeqNumResponse()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CleanupExpiredTokens", WrapperNamespace="http://myphones.com/webservices/", IsWrapped=true)]
    public partial class CleanupExpiredTokensRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://myphones.com/webservices/")]
        public Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=0)]
        public string[] callersClientContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://myphones.com/webservices/", Order=1)]
        public string sessionToken;
        
        public CleanupExpiredTokensRequest()
        {
        }
        
        public CleanupExpiredTokensRequest(Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader, string[] callersClientContext, string sessionToken)
        {
            this.RemoteClientInfoHeader = RemoteClientInfoHeader;
            this.callersClientContext = callersClientContext;
            this.sessionToken = sessionToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CleanupExpiredTokensResponse", WrapperNamespace="http://myphones.com/webservices/", IsWrapped=true)]
    public partial class CleanupExpiredTokensResponse
    {
        
        public CleanupExpiredTokensResponse()
        {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    public interface MyPhonesAuthenticationSoapChannel : Myphones.Authentication.MyPhonesAuthenticationSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    public partial class MyPhonesAuthenticationSoapClient : System.ServiceModel.ClientBase<Myphones.Authentication.MyPhonesAuthenticationSoap>, Myphones.Authentication.MyPhonesAuthenticationSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MyPhonesAuthenticationSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(MyPhonesAuthenticationSoapClient.GetBindingForEndpoint(endpointConfiguration), MyPhonesAuthenticationSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhonesAuthenticationSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MyPhonesAuthenticationSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhonesAuthenticationSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MyPhonesAuthenticationSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhonesAuthenticationSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string[]> GetIfUsageStatsAsync()
        {
            return base.Channel.GetIfUsageStatsAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Myphones.Authentication.AuthenticateResponse> Myphones.Authentication.MyPhonesAuthenticationSoap.AuthenticateAsync(Myphones.Authentication.AuthenticateRequest request)
        {
            return base.Channel.AuthenticateAsync(request);
        }
        
        public System.Threading.Tasks.Task<Myphones.Authentication.AuthenticateResponse> AuthenticateAsync(Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader, string[] callersClientContext, string userName, string password)
        {
            Myphones.Authentication.AuthenticateRequest inValue = new Myphones.Authentication.AuthenticateRequest();
            inValue.RemoteClientInfoHeader = RemoteClientInfoHeader;
            inValue.callersClientContext = callersClientContext;
            inValue.userName = userName;
            inValue.password = password;
            return ((Myphones.Authentication.MyPhonesAuthenticationSoap)(this)).AuthenticateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Myphones.Authentication.ReAuthenticateResponse> Myphones.Authentication.MyPhonesAuthenticationSoap.ReAuthenticateAsync(Myphones.Authentication.ReAuthenticateRequest request)
        {
            return base.Channel.ReAuthenticateAsync(request);
        }
        
        public System.Threading.Tasks.Task<Myphones.Authentication.ReAuthenticateResponse> ReAuthenticateAsync(Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader, string[] callersClientContext, string sessionToken, string password)
        {
            Myphones.Authentication.ReAuthenticateRequest inValue = new Myphones.Authentication.ReAuthenticateRequest();
            inValue.RemoteClientInfoHeader = RemoteClientInfoHeader;
            inValue.callersClientContext = callersClientContext;
            inValue.sessionToken = sessionToken;
            inValue.password = password;
            return ((Myphones.Authentication.MyPhonesAuthenticationSoap)(this)).ReAuthenticateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Myphones.Authentication.LogoffResponse> Myphones.Authentication.MyPhonesAuthenticationSoap.LogoffAsync(Myphones.Authentication.LogoffRequest request)
        {
            return base.Channel.LogoffAsync(request);
        }
        
        public System.Threading.Tasks.Task<Myphones.Authentication.LogoffResponse> LogoffAsync(Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader, string[] callersClientContext, string sessionToken)
        {
            Myphones.Authentication.LogoffRequest inValue = new Myphones.Authentication.LogoffRequest();
            inValue.RemoteClientInfoHeader = RemoteClientInfoHeader;
            inValue.callersClientContext = callersClientContext;
            inValue.sessionToken = sessionToken;
            return ((Myphones.Authentication.MyPhonesAuthenticationSoap)(this)).LogoffAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Myphones.Authentication.LogoffBySeqNumResponse> Myphones.Authentication.MyPhonesAuthenticationSoap.LogoffBySeqNumAsync(Myphones.Authentication.LogoffBySeqNumRequest request)
        {
            return base.Channel.LogoffBySeqNumAsync(request);
        }
        
        public System.Threading.Tasks.Task<Myphones.Authentication.LogoffBySeqNumResponse> LogoffBySeqNumAsync(Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader, string[] callersClientContext, string sessionToken, string sessionId)
        {
            Myphones.Authentication.LogoffBySeqNumRequest inValue = new Myphones.Authentication.LogoffBySeqNumRequest();
            inValue.RemoteClientInfoHeader = RemoteClientInfoHeader;
            inValue.callersClientContext = callersClientContext;
            inValue.sessionToken = sessionToken;
            inValue.sessionId = sessionId;
            return ((Myphones.Authentication.MyPhonesAuthenticationSoap)(this)).LogoffBySeqNumAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Myphones.Authentication.CleanupExpiredTokensResponse> Myphones.Authentication.MyPhonesAuthenticationSoap.CleanupExpiredTokensAsync(Myphones.Authentication.CleanupExpiredTokensRequest request)
        {
            return base.Channel.CleanupExpiredTokensAsync(request);
        }
        
        public System.Threading.Tasks.Task<Myphones.Authentication.CleanupExpiredTokensResponse> CleanupExpiredTokensAsync(Myphones.Authentication.RemoteClientInfoHeader RemoteClientInfoHeader, string[] callersClientContext, string sessionToken)
        {
            Myphones.Authentication.CleanupExpiredTokensRequest inValue = new Myphones.Authentication.CleanupExpiredTokensRequest();
            inValue.RemoteClientInfoHeader = RemoteClientInfoHeader;
            inValue.callersClientContext = callersClientContext;
            inValue.sessionToken = sessionToken;
            return ((Myphones.Authentication.MyPhonesAuthenticationSoap)(this)).CleanupExpiredTokensAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MyPhonesAuthenticationSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.MyPhonesAuthenticationSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MyPhonesAuthenticationSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/AuthenticationWS/MyPhonesAuthentication.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.MyPhonesAuthenticationSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/AuthenticationWS/MyPhonesAuthentication.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            MyPhonesAuthenticationSoap,
            
            MyPhonesAuthenticationSoap12,
        }
    }
}
